-- 1.회원 테이블
CREATE TABLE MEMBER(
   MEM_NUM INT PRIMARY KEY NOT NULL AUTO_INCREMENT 
   , MEM_ID VARCHAR(50) NOT NULL
   , MEM_PW VARCHAR(50) NOT NULL
   , MEM_NAME VARCHAR(100) NOT NULL
   , MEM_TEL VARCHAR(200)
   , CITIZEN_NUM VARCHAR(30) NOT NULL UNIQUE
   , MEM_ADDR VARCHAR(100)
   , ADDR_DETAIL VARCHAR(100)
   , MEM_EMAIL VARCHAR(100) NOT NULL
   , POST VARCHAR(100)
   , MEM_ROLE VARCHAR(50) NOT NULL DEFAULT('USER')
);
        
-- 2.환자정보 테이블(환자넘버, 환자이름, 나이, 성별, 주민번호, 주소, )
CREATE TABLE patient(
   PAT_NUM INT PRIMARY KEY NOT NULL AUTO_INCREMENT 
   , PAT_NAME VARCHAR(100) NOT NULL
   , PAT_EMAIL VARCHAR(100) NOT NULL
   , AGE INT NOT NULL
   , GENDER VARCHAR(50) NOT NULL
   , CITIZEN_NUM VARCHAR(100) NOT NULL
   , ADDRESS VARCHAR(100)
);


-- 3.수납정보 테이블(수납 번호, 환자넘버, 진료넘버(forein), 결제일)
CREATE TABLE DESK(
   DESK_NUM INT PRIMARY KEY NOT NULL AUTO_INCREMENT
   , PAT_NUM INT REFERENCES PATIENT(PAT_NUM) ON DELETE CASCADE
   , DESK_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
   -- 금액정도 추가합시다.
);

-- 4.의사정보 테이블(면호 번호, 의사 이름, 담당과)
CREATE TABLE DOCTOR(
   DOC_LINUM INT PRIMARY KEY NOT NULL
   , DOC_NAME VARCHAR(50) NOT NULL
   , DEPT VARCHAR(30) NOT NULL
);
   
-- 5. 입원 정보 테이블(입원일련번호, 입 퇴원 날짜, 호실,  수술날짜, 입원당사자인 환자번호)
CREATE TABLE info_date(
   DATE_NUM INT NOT NULL PRIMARY KEY AUTO_INCREMENT
   , IN_HOPI DATETIME NOT NULL
   , OUT_HOPI DATETIME
   , ROOM_NUM INT
   , OPER_DATE DATETIME
   , PAT_NUM INT REFERENCES patient(PAT_NUM) ON DELETE CASCADE
);

-- 6. 처방전 테이블(처방전 번호, 진료정보, 처방한 약 이름)
CREATE TABLE INFO_RECIPE(
   RECIPE_NUM INT NOT NULL PRIMARY KEY AUTO_INCREMENT
   , TRE_NUM INT REFERENCES info_treat(TRE_NUM) ON DELETE CASCADE
   , MEDI_NAME VARCHAR(30) 
   , EAT_CNT VARCHAR(100) NOT NULL
   -- 처방일 필요?
);

-- 7. 진료정보 테이블:pk 환자번호, 병명, 담당의사번호, 의사소견, 진료일일자, 입원여부(날짜로 확인))
CREATE TABLE info_treat(
   TRE_NUM INT PRIMARY KEY NOT NULL AUTO_INCREMENT
   , PAT_NUM INT NOT NULL REFERENCES patient(PAT_NUM) ON DELETE CASCADE
   , DISEASE VARCHAR(50) NOT NULL
   , DOC_LINUM INT NOT NULL REFERENCES doctor(DOC_LINUM) ON DELETE CASCADE
   , ABOUT_PAT VARCHAR(100) 
   , TRE_DATE DATETIME NOT NULL
   , DATE_NUM INT REFERENCES info_date(DATE_NUM) ON DELETE CASCADE
);
